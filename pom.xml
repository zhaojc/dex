<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.lq.pom</groupId>
		<artifactId>lqparent-git</artifactId>
		<version>1.0.0</version>
	</parent>
	<packaging>pom</packaging>
	<!-- 0. Mettre le nom de votre application -->
	<artifactId>Cardex</artifactId>
	<!-- 1. Mettre le groupid de votre application -->
	<groupId>com.lq.cardex</groupId>
	<!-- 2. Remplacer si necessaire mais ne pas enlever -SNAPSHOT -->
	<version>0.0.1-SNAPSHOT</version>
	<!-- 3.Remplacer par le nom court de votre application -->
	<name>Cardex</name>
	<!-- 4. Remplacer par un descriptif court de votre application -->
	<description>Application de reference Maven</description>
	<organization>
		<name>Loto Quebec</name>
		<url>http://www.lotoquebec.com/</url>
	</organization>
	<developers>
		<!--6. Utiliser le fragment <developer/> pour ajouter tous les developpeurs 
			du projet -->
		<developer>
			<id>elimane</id>
			<name>Elimane GUEYE</name>
			<email>elimane.gueye@gmail.com</email>
			<organization>Elimane GUEYE</organization>
			<organizationUrl>http://www.google.com</organizationUrl>
			<timezone>-5</timezone>
			<roles>
				<role>Architecte en herbe</role>
			</roles>
		</developer>
	</developers>
	<inceptionYear>2014</inceptionYear>

	<properties>
		<project.rname>${project.artifactId}</project.rname>
		<!-- 6. Remplacer par le groupe gitlab sous lequel vous comptez mettre 
			le code de l'application -->
		<project.group>core</project.group>
		<!-- 7. Remplacer pour attribuer un nom de release a l'application -->
		<project.qualifier>LQ</project.qualifier>
		<!-- 8. Remplacer par le nom de votre equipe -->
		<project.team>Standards de developpement</project.team>

		<project.site>${base.pt.url}/${project.rname}</project.site>
		<project.specification.title>${project.rname}</project.specification.title>
		<project.specification.version>${project.version}</project.specification.version>
		<project.specification.vendor>${project.team}</project.specification.vendor>
		<project.implementation.title>${project.qualifier}</project.implementation.title>
		<project.implementation.version>${project.version}</project.implementation.version>
		<project.implementation.vendor>${project.team}</project.implementation.vendor>

		<junit.version>4.8.2</junit.version>
		<logback.version>1.0.13</logback.version>
		<logback.logstash.version>2.3</logback.logstash.version>
		<slf4j.version>1.7.5</slf4j.version>
		<commons.configuration.version>1.10</commons.configuration.version>
		<jcl-over-slf4j.version>1.7.2-redhat-1</jcl-over-slf4j.version>
		<seam.version>3.1.0.Final</seam.version>
		<jpamodelgen.version>1.1.1.Final</jpamodelgen.version>
		<stdconf.version>1.0.3-SNAPSHOT</stdconf.version>
		<picketlink-idm-core.version>1.5.0.Alpha02</picketlink-idm-core.version>
		<ocpsoft-pretty-time.version>1.0.6</ocpsoft-pretty-time.version>
		<prettyfaces-jsf2.version>3.2.0</prettyfaces-jsf2.version>
		<commons-digester.version>2.1</commons-digester.version>
		<hibernate-validator.version>4.1.0.Final</hibernate-validator.version>
		<slf4j.version>1.7.5</slf4j.version>
		<jboss-ejb3-ext-api.version>2.1.0.redhat-1</jboss-ejb3-ext-api.version>

		<scm.url>${base.scm.url}/${project.group}/${project.rname}</scm.url>
		<scm.dev.url>scm:git:${scm.url}.git</scm.dev.url>
		<scm.con.url>scm:git:${scm.url}.git</scm.con.url>
		<scm.commit.url>${scm.url}/commit/${buildNumber}</scm.commit.url>
		<issue.url>${base.pt.url}/${project.rname}/issues</issue.url>

		<parent.deploy.skip>true</parent.deploy.skip>
		<war.deploy.skip>true</war.deploy.skip>
		<ear.deploy.skip>true</ear.deploy.skip>
		<jar.deploy.skip>true</jar.deploy.skip>
		<dist.deploy.skip>true</dist.deploy.skip>
		<test.skip>true</test.skip>

		<filter.file.parent>${basedir}/env/conf/application.properties</filter.file.parent>
		<filter.file>${basedir}/../env/conf/application.properties</filter.file>

		<app.home.source>${project.artifactId}-${project.version}</app.home.source>
		<app.home.build>${project.build.directory}/${app.home.source}/${project.artifactId}-home</app.home.build>
		<app.home.target>${user.home}/apphome/${env}/${project.artifactId}</app.home.target>

	</properties>
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<url>${releases.repo.url}</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Snapshots Repository</name>
			<url>${snapshots.repo.url}</url>
		</snapshotRepository>
		<site>
			<id>nexus</id>
			<name>LQ Project sites</name>
			<url>${site.url}</url>
		</site>
	</distributionManagement>
	<scm>
		<connection>${scm.con.url}</connection>
		<developerConnection>${scm.dev.url}</developerConnection>
		<url>${scm.url}</url>
	</scm>
	<issueManagement>
		<system>redmine</system>
		<url>${issue.url}</url>
	</issueManagement>
	<ciManagement>
		<url>${ci.url}</url>
		<system>Jenkins</system>
	</ciManagement>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>seam-bom</artifactId>
				<version>${seam.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>package</defaultGoal>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<skip>${test.skip}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<inherited>false</inherited>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<inherited>true</inherited>
				<configuration>
					<skip>${parent.deploy.skip}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<inherited>false</inherited>
			</plugin>
			<plugin>
				<groupId>com.redhat.rcm.maven.plugin</groupId>
				<artifactId>buildmetadata-maven-plugin</artifactId>
				<inherited>true</inherited>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>provide-buildmetadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<finalName>${app.home.source}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>${basedir}/src/main/assemble/default.xml</descriptor>
					</descriptors>
					<filters>
						<filter>${filter.file.parent}</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<id>GenerateApplicationHomeDir</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions.plugin.version}</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- genere le repertoire home de l'application dans target et le copie 
			a l'emplacement ${app.home.target} -->
		<profile>
			<id>postedev</id>
			<properties>
				<env>postedev</env>
			</properties>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${resources.plugin.version}</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>CopyApplicationHomeDir</id>
								<phase>install</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${app.home.target}</outputDirectory>
									<includeEmptyDirs>true</includeEmptyDirs>
									<resources>
										<resource>
											<directory>${app.home.build}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- genere un repertoire et une archive zip dans target contenant le repertoire 
			home de l'application + les unites de deploiement (ear,war) -->
		<profile>
			<id>bundle</id>
			<activation>
				<property>
					<name>bundle</name>
				</property>
			</activation>
			<modules>
				<module>app-modele-dist</module><!-- A changer -->
			</modules>
		</profile>
	</profiles>
  <modules>
  	<module>ValidationAdresse</module>
  	<module>Cardex-commun</module>
    <module>Cardex-web</module>
    <module>Cardex-dist</module>
  </modules>
</project>